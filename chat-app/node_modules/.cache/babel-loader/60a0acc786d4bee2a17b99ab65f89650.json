{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedmersall/Desktop/MINE/chat-app/chat-app/src/pages/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:8080\", {\n  transports: [\"websocket\"]\n});\nexport default function Chat(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    userName\n  } = location.state;\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  socket.on(\"chat_message\", function (msg) {\n    handleReceivedMessages(msg);\n  });\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const send = event => {\n    event.preventDefault();\n    socket.emit(\"chat_message\", {\n      text,\n      userName,\n      date: new Date()\n    });\n    setText(\"\");\n  };\n\n  const handleReceivedMessages = msg => {\n    let newMsgArr = [];\n    newMsgArr.push(msg);\n    setMessages([...messages, msg]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatarImg\",\n        alt: \"user_avatar\",\n        src: \"../avatr1.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user_name\",\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"msg_text_container\",\n        children: messages.map(res => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"msg_text\",\n            children: [res.text, \" \", res.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: handleChange,\n          className: \"chat_input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: send,\n          className: \"chat_button\",\n          children: \"SEND!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"WH+sTjELGQB2VcxACwG+/KpMOxo=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ahmedmersall/Desktop/MINE/chat-app/chat-app/src/pages/chat/Chat.js"],"names":["useLocation","useState","io","socket","transports","Chat","props","location","userName","state","text","setText","messages","setMessages","on","msg","handleReceivedMessages","handleChange","event","target","value","send","preventDefault","emit","date","Date","newMsgArr","push","map","res"],"mappings":"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","sourcesContent":["import \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nvar socket = io(\"http://localhost:8080\", {\n  transports: [\"websocket\"],\n});\n\nexport default function Chat(props) {\n  const location = useLocation();\n  const { userName } = location.state;\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  socket.on(\"chat_message\", function (msg) {\n    handleReceivedMessages(msg);\n  });\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const send = (event) => {\n    event.preventDefault();\n    socket.emit(\"chat_message\", { text, userName, date: new Date() });\n    setText(\"\");\n  };\n\n  const handleReceivedMessages = (msg) => {\n    let newMsgArr = [];\n    newMsgArr.push(msg);\n    setMessages([...messages, msg]);\n  };\n  return (\n    <div className='chat_container'>\n      <div className='header'>\n        <img className='avatarImg' alt='user_avatar' src='../avatr1.png' />\n        <p className='user_name'>{userName}</p>\n      </div>\n      <div className='chat_body'>\n        <ul className='msg_text_container'>\n          {messages.map((res) => {\n            return (\n              <li className='msg_text'>\n                {res.text} {res.date}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className='footer'>\n        <form className='input_container'>\n          <input value={text} onChange={handleChange} className='chat_input' />\n          <button onClick={send} className='chat_button'>\n            SEND!\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}