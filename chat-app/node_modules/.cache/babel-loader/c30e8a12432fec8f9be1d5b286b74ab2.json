{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedmersall/Desktop/MINE/chat-app/chat-app/src/pages/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:8080\", {\n  transports: [\"websocket\"]\n});\nexport default function Chat(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    userName,\n    room\n  } = location.state;\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.emit(\"join_room\", room, name => {\n      alert(name);\n    });\n  }, []);\n  socket.on(\"user_joined\", userName, name => {\n    alert(name);\n  });\n  socket.on(\"received_message\", function (msg) {\n    handleReceivedMessages(msg);\n  });\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const send = event => {\n    event.preventDefault();\n    const message = {\n      text,\n      userName,\n      date: new Date()\n    };\n    setMessages([...messages, message]);\n    socket.emit(\"send_message\", message, room);\n    setText(\"\");\n  };\n\n  const handleReceivedMessages = msg => {\n    let newMsgArr = [];\n    newMsgArr.push(msg);\n    setMessages([...messages, msg]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"avatarImg\",\n        alt: \"user_avatar\",\n        src: \"../avatr1.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user_name\",\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((res, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              justifyContent: res.userName === userName ? \"flex-end\" : \"flex-start\"\n            },\n            className: \"msg_text\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: res.userName === userName ? \"#ff1717\" : \"#cd5c5c\"\n              },\n              className: \"msg_text_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [res.text, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date_text\",\n                children: moment(res.date).format(\"HH:mm:ss\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, res.date + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: handleChange,\n          className: \"chat_input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !text,\n          onClick: send,\n          className: \"chat_button\",\n          children: \"SEND!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"qKcWTZB/xMUHFFme+R8XmwoE5m4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/ahmedmersall/Desktop/MINE/chat-app/chat-app/src/pages/chat/Chat.js"],"names":["useLocation","useEffect","useState","io","moment","socket","transports","Chat","props","location","userName","room","state","text","setText","messages","setMessages","emit","name","alert","on","msg","handleReceivedMessages","handleChange","event","target","value","send","preventDefault","message","date","Date","newMsgArr","push","map","res","index","justifyContent","background","format"],"mappings":"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","sourcesContent":["import \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport moment from \"moment\";\n\nvar socket = io(\"http://localhost:8080\", {\n  transports: [\"websocket\"],\n});\n\nexport default function Chat(props) {\n  const location = useLocation();\n  const { userName, room } = location.state;\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.emit(\"join_room\", room, (name) => {\n      alert(name);\n    });\n  }, []);\n\n  socket.on(\"user_joined\", userName, (name) => {\n    alert(name);\n  });\n  socket.on(\"received_message\", function (msg) {\n    handleReceivedMessages(msg);\n  });\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const send = (event) => {\n    event.preventDefault();\n    const message = { text, userName, date: new Date() };\n    setMessages([...messages, message]);\n    socket.emit(\"send_message\", message, room);\n    setText(\"\");\n  };\n\n  const handleReceivedMessages = (msg) => {\n    let newMsgArr = [];\n    newMsgArr.push(msg);\n    setMessages([...messages, msg]);\n  };\n  return (\n    <div className='chat_container'>\n      <header className='header'>\n        <img className='avatarImg' alt='user_avatar' src='../avatr1.png' />\n        <p className='user_name'>{userName}</p>\n      </header>\n      <div className='chat_body'>\n        <ul>\n          {messages.map((res, index) => {\n            return (\n              <li\n                style={{\n                  justifyContent:\n                    res.userName === userName ? \"flex-end\" : \"flex-start\",\n                }}\n                key={res.date + index}\n                className={\"msg_text\"}>\n                <div\n                  style={{\n                    background:\n                      res.userName === userName ? \"#ff1717\" : \"#cd5c5c\",\n                  }}\n                  className='msg_text_container'>\n                  <span>{res.text} </span>\n                  <span className='date_text'>\n                    {moment(res.date).format(\"HH:mm:ss\")}\n                  </span>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <footer>\n        <form className='input_container'>\n          <input value={text} onChange={handleChange} className='chat_input' />\n          <button disabled={!text} onClick={send} className='chat_button'>\n            SEND!\n          </button>\n        </form>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}